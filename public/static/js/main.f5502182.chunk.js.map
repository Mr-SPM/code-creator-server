{"version":3,"sources":["utils/index.ts","compoents/RuleForm/index.tsx","pages/creator.tsx","pages/settings.tsx","pages/upload.tsx","pages/list.tsx","pages/localCode.tsx","router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getRuleReg","rule","prefix","content","suffix","Setting","props","onConfirm","useState","setRule","useForm","form","useEffect","setFieldsValue","style","textAlign","width","margin","backgroundColor","padding","onFinish","labelCol","span","onValuesChange","cv","av","Item","name","label","required","color","fontWeight","placeholder","type","htmlType","TabPane","showCode","code","currentFormItem","rs","Object","keys","forEach","item","replace","RegExp","exportTemplate","file","formValue","blob","Blob","outputCode","saveAs","Creator","history","useHistory","useParams","version","author","description","files","detail","setDetail","Axios","get","then","res","data","setCode","setFiles","error","setTimeout","push","createForm","length","all","map","template","url","spread","index","setCodeCtn","setIndex","Number","Prism","highlightAll","formValues","setFormValues","match","newFormValues","array","has","undefined","outputFormValue","resetFields","handleValueChange","useCallback","changeValue","setCurrentFormItem","renderForm","key","onFocus","formElement","useMemo","visible","setVisible","tempCode","setTempCode","dvisible","setDVisible","display","height","flex","flexDirection","overflow","headStyle","flexShrink","title","extra","onClick","disabled","text","onCopy","success","exportPatch","defaultActiveKey","String","onChange","tab","className","split","React","createElement","dangerouslySetInnerHTML","__html","marginLeft","onSelect","value","handleExtendsFormValues","allowClear","i","Option","placement","closable","onClose","RuleForm","onOk","onCancel","TextArea","target","autoSize","minRows","updateSetting","values","axios","post","MyUpload","others","info","status","console","log","fileList","response","onRemove","UploadOutlined","savePackage","message","TemplateUpload","uploadConfig","action","List","fields","add","remove","field","accept","MinusCircleOutlined","marginTop","PlusOutlined","list","setList","query","setQuery","size","filter","indexOf","xs","sm","md","lg","Routes","exact","path","App","Header","marginRight","mode","theme","to","Content","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f5502182.chunk.js","sourcesContent":["export function getRuleReg(rule: Rule) {\r\n  if (rule.prefix && rule.content && rule.suffix) {\r\n    return `(?<=${rule.prefix})(${rule.content}*?)(?=${rule.suffix})`;\r\n  }\r\n  return '';\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\ninterface RuleForm extends Rule {\r\n  onConfirm(values: any): void;\r\n}\r\n\r\nconst Setting: React.FC<RuleForm> = (props) => {\r\n  const { onConfirm, prefix, content, suffix } = props;\r\n  const [rule, setRule] = useState({\r\n    prefix: '',\r\n    content: '',\r\n    suffix: '',\r\n  });\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    setRule({\r\n      prefix,\r\n      content,\r\n      suffix,\r\n    });\r\n    form.setFieldsValue({\r\n      prefix,\r\n      content,\r\n      suffix,\r\n    });\r\n  }, [prefix, content, suffix]);\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          margin: '0 auto',\r\n          backgroundColor: '#fff',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <h2>规则设置</h2>\r\n        <Form\r\n          form={form}\r\n          onFinish={onConfirm}\r\n          labelCol={{ span: 6 }}\r\n          onValuesChange={(cv, av: any) => setRule(av)}\r\n        >\r\n          <Form.Item name=\"prefix\" label=\"前缀\" required>\r\n            <Input\r\n              prefix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>\r\n                  {'/(?<='}\r\n                </span>\r\n              }\r\n              suffix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>)</span>\r\n              }\r\n              placeholder=\"前匹配\"\r\n            ></Input>\r\n          </Form.Item>\r\n          <Form.Item name=\"content\" label=\"匹配\" required>\r\n            <Input\r\n              prefix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>(</span>\r\n              }\r\n              suffix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>\r\n                  *?)\r\n                </span>\r\n              }\r\n              placeholder=\"请输入正确的正则表达式\"\r\n            ></Input>\r\n          </Form.Item>\r\n          <Form.Item name=\"suffix\" label=\"后缀\" required>\r\n            <Input\r\n              prefix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>\r\n                  (?=\r\n                </span>\r\n              }\r\n              suffix={\r\n                <span style={{ color: '#1890ff', fontWeight: 'bold' }}>\r\n                  )/gm\r\n                </span>\r\n              }\r\n              placeholder=\"后匹配\"\r\n            ></Input>\r\n          </Form.Item>\r\n          <Form.Item label=\"预览\">\r\n            <div style={{ color: 'red', textAlign: 'left' }}>\r\n              {`/(?<=${rule.prefix})(${rule.content}*?)(?=${rule.suffix})/gm`}\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  message,\r\n  Card,\r\n  Tabs,\r\n  Descriptions,\r\n  Select,\r\n  Drawer,\r\n} from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport { getRuleReg } from '../utils/index';\r\nimport { Package } from './types';\r\nimport RuleForm from '../compoents/RuleForm';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface FileItem {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nfunction outputFormValue(array: string[]) {\r\n  const has: Record<string, string> = {};\r\n  array.forEach((item) => {\r\n    if (has[item] === undefined) {\r\n      has[item] = '';\r\n    }\r\n  });\r\n  return has;\r\n}\r\n\r\nfunction showCode(\r\n  form: Record<string, string>,\r\n  code: string,\r\n  currentFormItem = '',\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  if (code && form) {\r\n    let rs = code;\r\n    Object.keys(form).forEach((item) => {\r\n      rs = rs.replace(\r\n        new RegExp(`${rule.prefix}${item}${rule.suffix}`, 'gm'),\r\n        `<span class=\"slot-${item} ${\r\n          item === currentFormItem ? 'actived-code' : ''\r\n        }\">${form[item] || ' '}</span>`\r\n      );\r\n    });\r\n    return rs;\r\n  }\r\n  return '';\r\n}\r\n\r\n/** 导出模版 */\r\nfunction exportTemplate(\r\n  file: FileItem,\r\n  formValue: Record<string, string>,\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  const blob = new Blob([outputCode(formValue, file.code, rule)], {\r\n    type: 'text/plain;charset=utf-8',\r\n  });\r\n  saveAs(blob, file.name);\r\n}\r\nfunction exportPatch(\r\n  files: FileItem[],\r\n  formValues: Record<string, string>[],\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  files.forEach((item, index) => {\r\n    exportTemplate(item, formValues[index], rule);\r\n  });\r\n}\r\n\r\nfunction outputCode(\r\n  form: Record<string, string> = {},\r\n  code: string = '',\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  let rs = code;\r\n  Object.keys(form).forEach((item) => {\r\n    rs = rs.replace(\r\n      new RegExp(`${rule.prefix}${item}${rule.suffix}`, 'gm'),\r\n      form[item]\r\n    );\r\n  });\r\n  return rs;\r\n}\r\n\r\nconst Creator: React.FC = () => {\r\n  const history = useHistory();\r\n  const { name, version } = useParams();\r\n  const [detail, setDetail] = useState<Package>({\r\n    name: '',\r\n    author: '',\r\n    version: '1.0.0',\r\n    description: '',\r\n    files: [],\r\n  });\r\n  useEffect(() => {\r\n    Axios.get(`/api/getPackage?name=${name}&version=${version}`).then((res) => {\r\n      setDetail(res.data.data);\r\n    });\r\n  }, [name, version]);\r\n\r\n  const [code, setCode] = useState('');\r\n\r\n  const [files, setFiles] = useState<FileItem[]>([]);\r\n\r\n  const [rule, setRule] = useState({\r\n    prefix: '',\r\n    content: '',\r\n    suffix: '',\r\n  });\r\n  useEffect(() => {\r\n    Axios.get('/api/getSetting').then((res) => {\r\n      if (res.data) {\r\n        setRule(res.data);\r\n      } else {\r\n        message.error('未设置规则，即将跳转设置！');\r\n        setTimeout(() => {\r\n          history.push('/settings');\r\n        }, 3000);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    createForm(code, getRuleReg(rule));\r\n  }, [rule, code]);\r\n\r\n  // 加载云端文件\r\n  useEffect(() => {\r\n    if (detail.files.length > 0) {\r\n      Axios.all(detail.files.map((item) => Axios.get(item.template.url))).then(\r\n        Axios.spread(function (...props) {\r\n          // Both requests are now complete\r\n          setFiles(\r\n            props.map((item, index) => ({\r\n              name: detail.files[index].template.name,\r\n              code: item.data,\r\n            }))\r\n          );\r\n          setCodeCtn(props[0].data);\r\n        }),\r\n        () => {\r\n          message.error('模版文件加载失败');\r\n        }\r\n      );\r\n    }\r\n  }, [detail.files]);\r\n\r\n  //#region  tab控制\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleTabChange = (key: string) => {\r\n    setIndex(Number(key));\r\n  };\r\n\r\n  // 设置code\r\n  useEffect(() => {\r\n    if (files && files.length > 0) {\r\n      setCodeCtn(files[Number(index)].code);\r\n    }\r\n  }, [index, files]);\r\n  //#endregion\r\n\r\n  /** 设置代码，高亮，更新表单 */\r\n  const setCodeCtn = (code: string) => {\r\n    setCode(code);\r\n    createForm(code, getRuleReg(rule));\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  //#region 表单相关\r\n  const [form] = Form.useForm();\r\n  const [formValues, setFormValues] = useState<Record<string, string>[]>([]);\r\n\r\n  /** 分析代码，生成表单 */\r\n  const createForm = (code: string, rule: string) => {\r\n    if (code && rule) {\r\n      if (formValues[index]) {\r\n        form.setFieldsValue(formValues[index]);\r\n      } else {\r\n        const res = code.match(new RegExp(rule, 'gm'));\r\n        const newFormValues = [...formValues];\r\n        if (res) {\r\n          newFormValues[index] = outputFormValue(res);\r\n          form.setFieldsValue(newFormValues[index]);\r\n        } else {\r\n          newFormValues[index] = {};\r\n          form.resetFields();\r\n          message.error('代码中不存在插槽！');\r\n        }\r\n        setFormValues(newFormValues);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleValueChange = useCallback(\r\n    (changeValue: any) => {\r\n      const newFormValues = [...formValues];\r\n      newFormValues[index] = { ...newFormValues[index], ...changeValue };\r\n      setFormValues(newFormValues);\r\n      // 设置表单数据\r\n      form.setFieldsValue(newFormValues[index]);\r\n    },\r\n    [formValues, index]\r\n  );\r\n\r\n  /** 设置插槽高亮 */\r\n  const [currentFormItem, setCurrentFormItem] = useState('');\r\n\r\n  const renderForm = useCallback(\r\n    (formValues: Record<string, string> = {}) =>\r\n      Object.keys(formValues).map((item) => (\r\n        <Form.Item name={item} key={item} label={item} required>\r\n          <Input\r\n            placeholder=\"请输入\"\r\n            onFocus={() => setCurrentFormItem(item)}\r\n          ></Input>\r\n        </Form.Item>\r\n      )),\r\n    [handleValueChange]\r\n  );\r\n  const formElement = useMemo(\r\n    () => (formValues.length > 0 ? renderForm(formValues[index]) : ''),\r\n    [formValues, renderForm, index]\r\n  );\r\n\r\n  /** 继承插槽值 */\r\n  const handleExtendsFormValues = (value: any) => {\r\n    const formValue = formValues[Number(value)];\r\n    const newFormValues = [...formValues];\r\n    newFormValues[index] = { ...formValues[index], ...formValue };\r\n    setFormValues(newFormValues);\r\n    form.setFieldsValue(newFormValues[index]);\r\n  };\r\n  //#endregion\r\n\r\n  //#region  导入代码相关\r\n  const [visible, setVisible] = useState(false);\r\n  const [tempCode, setTempCode] = useState('');\r\n  const showCodeModal = () => {\r\n    setVisible(true);\r\n    setTempCode(code);\r\n  };\r\n  const modalConfirm = () => {\r\n    setCodeCtn(tempCode);\r\n    setVisible(false);\r\n  };\r\n  const modalCancel = () => {\r\n    setTempCode('');\r\n    setVisible(false);\r\n  };\r\n  //#endregion\r\n\r\n  /** 代码高亮 */\r\n  const setHightLight = () => {\r\n    setCurrentFormItem('');\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  //#region 本地规则抽屉\r\n  const [dvisible, setDVisible] = useState(false);\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%', padding: 20, flex: 1 }}>\r\n      <Card\r\n        style={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflow: 'auto',\r\n        }}\r\n        headStyle={{ flexShrink: 0 }}\r\n        title=\"代码预览区域\"\r\n        extra={\r\n          <div>\r\n            {currentFormItem !== '' && (\r\n              <Button onClick={setHightLight}>代码高亮</Button>\r\n            )}\r\n            <Button type=\"primary\" onClick={showCodeModal} disabled>\r\n              导入/编辑代码\r\n            </Button>\r\n            <CopyToClipboard\r\n              text={\r\n                formValues.length > 0 &&\r\n                outputCode(formValues[index], code, rule)\r\n              }\r\n              onCopy={() => message.success('复制成功')}\r\n            >\r\n              <Button type=\"primary\">复制代码</Button>\r\n            </CopyToClipboard>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => exportPatch(files, formValues, rule)}\r\n            >\r\n              导出模版\r\n            </Button>\r\n            <Button type=\"primary\" onClick={() => setDVisible(true)}>\r\n              设置临时规则\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <Descriptions title=\"基本信息\">\r\n          <Descriptions.Item label=\"作者\">{detail.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"版本\">{detail.version}</Descriptions.Item>\r\n          <Descriptions.Item label=\"简介\">\r\n            {detail.description}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        {files && files.length > 0 && (\r\n          <Tabs defaultActiveKey={String(index)} onChange={handleTabChange}>\r\n            {files.map((item, index) => (\r\n              <TabPane tab={item.name} key={String(index)}>\r\n                <pre className={` language-${item.name.split('.')[1]}`}>\r\n                  {React.createElement('code', {\r\n                    className: `language-${item.name.split('.')[1]}`,\r\n                    dangerouslySetInnerHTML: {\r\n                      __html:\r\n                        formValues.length > 0 &&\r\n                        showCode(formValues[index], code, currentFormItem, rule),\r\n                    },\r\n                  })}\r\n                </pre>\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        )}\r\n      </Card>\r\n      <Card\r\n        title={`【${files[index]?.name}】配置`}\r\n        style={{ width: '500px', marginLeft: 20 }}\r\n        extra={\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() =>\r\n              exportTemplate(files[index], formValues[index], rule)\r\n            }\r\n          >\r\n            导出当前文件\r\n          </Button>\r\n        }\r\n      >\r\n        <div>\r\n          <Form\r\n            form={form}\r\n            labelCol={{ span: 8 }}\r\n            onValuesChange={(changeValue) => handleValueChange(changeValue)}\r\n          >\r\n            {index > 0 && (\r\n              <Form.Item label=\"插槽值继承\">\r\n                <Select\r\n                  placeholder=\"选择模版插槽继承\"\r\n                  onSelect={(value) => handleExtendsFormValues(value)}\r\n                  allowClear\r\n                >\r\n                  {files.map((item, i) => (\r\n                    <Select.Option key={i} value={i} disabled={i === index}>\r\n                      {item.name}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {formElement}\r\n          </Form>\r\n        </div>\r\n      </Card>\r\n      <Drawer\r\n        title=\"临时规则设置\"\r\n        placement=\"right\"\r\n        width={400}\r\n        closable={false}\r\n        onClose={() => setDVisible(false)}\r\n        visible={dvisible}\r\n      >\r\n        <RuleForm\r\n          {...rule}\r\n          onConfirm={(value: any) => {\r\n            setDVisible(false);\r\n            setRule(value);\r\n          }}\r\n        ></RuleForm>\r\n      </Drawer>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"导入代码【可编辑】\"\r\n        onOk={modalConfirm}\r\n        onCancel={modalCancel}\r\n      >\r\n        <Input.TextArea\r\n          onChange={({ target }) => setTempCode(target.value)}\r\n          value={tempCode}\r\n          allowClear\r\n          autoSize={{ minRows: 10 }}\r\n        ></Input.TextArea>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Creator;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\nimport RuleForm from '../compoents/RuleForm';\r\n\r\nfunction updateSetting(values: any) {\r\n  axios.post('api/updateSetting', values).then(() => {\r\n    message.success('设置成功');\r\n  });\r\n}\r\n\r\nconst Setting: React.FC = () => {\r\n  const [rule, setRule] = useState({\r\n    prefix: '',\r\n    content: '',\r\n    suffix: '',\r\n  });\r\n  useEffect(() => {\r\n    axios.get('/api/getSetting').then((res) => {\r\n      setRule(res.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div\r\n        style={{\r\n          width: '680px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#fff',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <RuleForm {...rule} onConfirm={updateSetting}></RuleForm>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\nimport { Form, Input, Button, Upload, message } from 'antd';\r\nimport { UploadProps } from 'antd/es/upload';\r\nimport {\r\n  UploadOutlined,\r\n  PlusOutlined,\r\n  MinusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\ninterface MyUploadProps extends UploadProps {\r\n  value?: string;\r\n  onChange?(info: any): void;\r\n}\r\nconst MyUpload: React.FC<MyUploadProps> = (props) => {\r\n  const { value, onChange, ...others } = props;\r\n  const handleChange = (info: any) => {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      onChange &&\r\n        onChange({ name: info.file.name, url: info.file.response.data.url });\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n  const handleRemove = () => {\r\n    onChange && onChange('');\r\n  };\r\n  return (\r\n    <Upload {...others} onChange={handleChange} onRemove={handleRemove}>\r\n      {!value && (\r\n        <Button>\r\n          <UploadOutlined /> 点击上传\r\n        </Button>\r\n      )}\r\n    </Upload>\r\n  );\r\n};\r\n\r\nfunction savePackage(values: any) {\r\n  console.log(values);\r\n  axios.post('/api/savePackage', values).then((res) => {\r\n    if (!res.data.success) {\r\n      message.error(res.data.message);\r\n    } else {\r\n      message.success('操作成功');\r\n    }\r\n  });\r\n}\r\n\r\ninterface TemplateFile {\r\n  file: any;\r\n  description: string;\r\n  readme: any;\r\n}\r\n\r\ninterface Package {\r\n  name: string;\r\n  author: string;\r\n  version: string;\r\n  files: TemplateFile[];\r\n}\r\n\r\nconst TemplateUpload: React.FC = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const uploadConfig = {\r\n    name: 'file',\r\n    action: '/api/upload',\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: '680px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#fff',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Form form={form} labelCol={{ span: 4 }} onFinish={savePackage}>\r\n          {/* <Form.Item name=\"type\" label=\"类型\" required>\r\n            <Radio.Group>\r\n              <Radio value={1}>单文件</Radio>\r\n              <Radio value={2}>多文件</Radio>\r\n            </Radio.Group>\r\n          </Form.Item> */}\r\n          <Form.Item name='name' label='模版名' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.Item name='description' label='概要' required>\r\n            <Input.TextArea autoSize={{ minRows: 2 }}></Input.TextArea>\r\n          </Form.Item>\r\n          <Form.Item name='version' label='版本号' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.Item name='author' label='作者' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.List name='files'>\r\n            {(fields, { add, remove }) => {\r\n              return (\r\n                <div>\r\n                  {fields.map((field, index) => (\r\n                    <div key={field.key} className='template-ctn'>\r\n                      <p className='template-title'>模版文件{index + 1}</p>\r\n                      <Form.Item\r\n                        name={[field.name, 'template']}\r\n                        // fieldKey={[field.fieldKey, 'template']}\r\n                        label='模版文件'\r\n                      >\r\n                        <MyUpload\r\n                          {...uploadConfig}\r\n                          // onChange={FileUploadProvider(index, 'template')}\r\n                        ></MyUpload>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name={[field.name, 'description']}\r\n                        // fieldKey={[field.fieldKey, 'description']}\r\n                        label='简介'\r\n                      >\r\n                        <Input.TextArea\r\n                          autoSize={{ minRows: 2 }}\r\n                        ></Input.TextArea>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name={[field.name, 'readme']}\r\n                        // fieldKey={[field.fieldKey, 'readme']}\r\n                        label='说明文档(md)'\r\n                      >\r\n                        <MyUpload\r\n                          {...uploadConfig}\r\n                          accept='.md'\r\n                          // onChange={FileUploadProvider(index, 'template')}\r\n                        ></MyUpload>\r\n                      </Form.Item>\r\n                      {fields.length > 1 ? (\r\n                        <MinusCircleOutlined\r\n                          className='dynamic-delete-button'\r\n                          style={{ margin: '0 8px' }}\r\n                          onClick={() => {\r\n                            remove(field.name);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <Form.Item label='模版'>\r\n                    <Button\r\n                      type='dashed'\r\n                      onClick={() => {\r\n                        add();\r\n                      }}\r\n                      style={{ width: '60%', marginTop: 10 }}\r\n                    >\r\n                      <PlusOutlined /> 添加模版\r\n                    </Button>\r\n                  </Form.Item>\r\n                </div>\r\n              );\r\n            }}\r\n          </Form.List>\r\n          <Form.Item style={{ textAlign: 'center' }}>\r\n            <Button type='primary' htmlType='submit'>\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Empty, Input } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Package } from './types';\r\n\r\nconst List: React.FC = () => {\r\n  const [list, setList] = useState<Package[]>([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    axios.get('/api/list').then((res) => {\r\n      setList(res.data);\r\n    });\r\n  }, []);\r\n  // 筛选\r\n  const [query, setQuery] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Input\r\n          size='large'\r\n          style={{ width: '300px', marginLeft: 10 }}\r\n          value={query}\r\n          onChange={({ target }) => setQuery(target.value)}\r\n          placeholder='请输入模版名搜索'\r\n        ></Input>\r\n      </div>\r\n      <Row>\r\n        {list && list.length > 0 ? (\r\n          list\r\n            .filter((item) => item.name.indexOf(query) !== -1)\r\n            .map((item) => (\r\n              <Col\r\n                key={item.name}\r\n                xs={24}\r\n                sm={24}\r\n                md={12}\r\n                lg={6}\r\n                style={{ padding: 10 }}\r\n              >\r\n                <Card\r\n                  title={item.name}\r\n                  extra={item.version}\r\n                  onClick={() => history.push(`/creator/${item.name}/${item.version}`)}\r\n                >\r\n                  <pre>{item.description || '暂无简介'}</pre>\r\n                  <p style={{ textAlign: 'right' }}>作者：{item.author}</p>\r\n                </Card>\r\n              </Col>\r\n            ))\r\n        ) : (\r\n          <Empty></Empty>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport { Form, Input, Modal, Button, message, Card, Drawer } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getRuleReg } from '../utils/index';\r\nimport RuleForm from '../compoents/RuleForm';\r\n// import Prism from 'prismjs';\r\n// import useRequest from '../hooks/useRequest';\r\n\r\nfunction outputFormValue(array: string[]) {\r\n  const has: Record<string, string | undefined> = {};\r\n  array.forEach((item) => {\r\n    if (has[item] === undefined) {\r\n      has[item] = '';\r\n    }\r\n  });\r\n  return has;\r\n}\r\n\r\nfunction showCode(\r\n  form: Record<string, string>,\r\n  code: string,\r\n  currentFormItem = '',\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  if (code && form) {\r\n    let rs = code;\r\n    Object.keys(form).forEach((item) => {\r\n      rs = rs.replace(\r\n        new RegExp(`${rule.prefix}${item}${rule.suffix}`, 'gm'),\r\n        `<span class=\"slot-${item} ${\r\n          item === currentFormItem ? 'actived-code' : ''\r\n        }\">${form[item] || ' '}</span>`\r\n      );\r\n    });\r\n    return rs;\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction outputCode(\r\n  form: Record<string, string> = {},\r\n  code: string = '',\r\n  rule = {\r\n    prefix: '{{',\r\n    suffix: '}}',\r\n  }\r\n) {\r\n  let rs = code;\r\n  Object.keys(form).forEach((item) => {\r\n    rs = rs.replace(\r\n      new RegExp(`${rule.prefix}${item}${rule.suffix}`, 'gm'),\r\n      form[item]\r\n    );\r\n  });\r\n  return rs;\r\n}\r\n\r\nconst Creator: React.FC = () => {\r\n  const history = useHistory();\r\n  const [code, setCode] = useState('');\r\n\r\n  //#region 获取规则\r\n  const [rule, setRule] = useState({\r\n    prefix: '',\r\n    content: '',\r\n    suffix: '',\r\n  });\r\n  useEffect(() => {\r\n    Axios.get('/api/getSetting').then((res) => {\r\n      if (res.data) {\r\n        setRule(res.data);\r\n      } else {\r\n        message.error('未设置规则，即将跳转设置！');\r\n        setTimeout(() => {\r\n          history.push('/settings');\r\n        }, 3000);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    createForm(code, getRuleReg(rule));\r\n  }, [rule, code]);\r\n\r\n  /** 分析代码，生成表单 */\r\n  const createForm = (code: string, rule: string) => {\r\n    if (code && rule) {\r\n      const res = code.match(new RegExp(rule, 'gm'));\r\n      if (res) {\r\n        setFormValues(outputFormValue(res));\r\n      } else {\r\n        message.error('代码中不存在插槽！');\r\n      }\r\n    }\r\n  };\r\n\r\n  /** 设置代码，高亮，更新表单 */\r\n  const setCodeCtn = (code: string) => {\r\n    setCode(code);\r\n    createForm(code, getRuleReg(rule));\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  //#region 表单相关\r\n  const [formValues, setFormValues] = useState({});\r\n\r\n  const handleValueChange = useCallback(\r\n    (changeValue: any) => {\r\n      setFormValues({ ...formValues, ...changeValue });\r\n    },\r\n    [formValues]\r\n  );\r\n\r\n  /** 设置插槽高亮 */\r\n  const [currentFormItem, setCurrentFormItem] = useState('');\r\n\r\n  const renderForm = useCallback(\r\n    (formValues: Record<string, string>) => (\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        onValuesChange={(changeValue) => handleValueChange(changeValue)}\r\n      >\r\n        {Object.keys(formValues).map((item) => (\r\n          <Form.Item name={item} key={item} label={item} required>\r\n            <Input\r\n              placeholder=\"请输入\"\r\n              onFocus={() => setCurrentFormItem(item)}\r\n            ></Input>\r\n          </Form.Item>\r\n        ))}\r\n      </Form>\r\n    ),\r\n    [handleValueChange]\r\n  );\r\n  const form = useMemo(() => renderForm(formValues), [formValues, renderForm]);\r\n  //#endregion\r\n\r\n  //#region  导入代码相关\r\n  const [visible, setVisible] = useState(false);\r\n  const [tempCode, setTempCode] = useState('');\r\n  const showCodeModal = () => {\r\n    setVisible(true);\r\n    setTempCode(code);\r\n  };\r\n  const modalConfirm = () => {\r\n    setCodeCtn(tempCode);\r\n    setVisible(false);\r\n  };\r\n  const modalCancel = () => {\r\n    setTempCode('');\r\n    setVisible(false);\r\n  };\r\n  //#endregion\r\n\r\n  const setHightLight = () => {\r\n    setCurrentFormItem('');\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  //#region 本地规则抽屉\r\n  const [dvisible, setDVisible] = useState(false);\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%', padding: 20 }}>\r\n      <Card\r\n        style={{ flex: 1 }}\r\n        title=\"代码预览区域\"\r\n        extra={\r\n          <div>\r\n            {currentFormItem !== '' && (\r\n              <Button onClick={setHightLight}>代码高亮</Button>\r\n            )}\r\n            <Button type=\"primary\" onClick={showCodeModal}>\r\n              导入/编辑代码\r\n            </Button>\r\n            <CopyToClipboard\r\n              text={outputCode(formValues, code, rule)}\r\n              onCopy={() => message.success('复制成功')}\r\n            >\r\n              <Button type=\"primary\">复制代码</Button>\r\n            </CopyToClipboard>\r\n            <Button type=\"primary\" onClick={() => setDVisible(true)}>\r\n              设置临时规则\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <pre className=\" language-tsx\">\r\n          {React.createElement('code', {\r\n            className: 'language-tsx',\r\n            dangerouslySetInnerHTML: {\r\n              __html: code\r\n                ? showCode(formValues, code, currentFormItem, rule)\r\n                : '请导入代码',\r\n            },\r\n          })}\r\n        </pre>\r\n      </Card>\r\n      <Card title=\"模版代码配置\" style={{ width: '500px', marginLeft: 20 }}>\r\n        <div>{form}</div>\r\n      </Card>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"导入代码【可编辑】\"\r\n        onOk={modalConfirm}\r\n        onCancel={modalCancel}\r\n      >\r\n        <Input.TextArea\r\n          onChange={({ target }) => setTempCode(target.value)}\r\n          value={tempCode}\r\n          allowClear\r\n          autoSize={{ minRows: 10 }}\r\n        ></Input.TextArea>\r\n      </Modal>\r\n      <Drawer\r\n        title=\"临时规则设置\"\r\n        placement=\"right\"\r\n        width={400}\r\n        closable={false}\r\n        onClose={() => setDVisible(false)}\r\n        visible={dvisible}\r\n      >\r\n        <RuleForm\r\n          {...rule}\r\n          onConfirm={(value: any) => {\r\n            setDVisible(false);\r\n            setRule(value);\r\n          }}\r\n        ></RuleForm>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Creator;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Creator from './pages/creator';\r\nimport Setting from './pages/settings';\r\nimport Upload from './pages/upload';\r\nimport List from './pages/list';\r\nimport LocalCode from './pages/localCode';\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n      <Route exact path=\"/creator/:name/:version\">\r\n        <Creator></Creator>\r\n      </Route>\r\n      <Route exact path=\"/ezcode\">\r\n        <LocalCode></LocalCode>\r\n      </Route>\r\n      <Route exact path=\"/settings\">\r\n        <Setting></Setting>\r\n      </Route>\r\n      <Route exact path=\"/upload\">\r\n        <Upload></Upload>\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n        <List></List>\r\n      </Route>\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout style={{ height: '100vh' }}>\r\n        <Layout.Header className=\"header\">\r\n          <h1 style={{ color: '#fff', marginRight: 60 }}>代码生成器</h1>\r\n\r\n          <Menu mode=\"horizontal\" theme=\"dark\">\r\n            <Menu.Item>\r\n              <Link to=\"/\">模版列表</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/ezcode\">本地操作台</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/settings\">设置</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/upload\">上传模版</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Layout.Header>\r\n        <Layout.Content style={{ padding: 20, textAlign: 'left' }}>\r\n          <Routes></Routes>\r\n        </Layout.Content>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}