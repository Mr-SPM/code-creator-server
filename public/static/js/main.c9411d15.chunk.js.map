{"version":3,"sources":["pages/creator.tsx","pages/settings.tsx","pages/upload.tsx","pages/list.tsx","pages/localCode.tsx","router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TabPane","showCode","form","code","currentFormItem","rs","Object","keys","forEach","item","replace","RegExp","exportTemplate","file","formValue","blob","Blob","outputCode","type","saveAs","name","Creator","useParams","version","useState","author","description","files","detail","setDetail","useEffect","Axios","get","then","res","data","setCode","setFiles","length","all","map","template","url","spread","props","index","setCodeCtn","error","setIndex","Number","createForm","setTimeout","Prism","highlightAll","useForm","formValues","setFormValues","setFieldsValue","match","newFormValues","array","has","undefined","outputFormValue","resetFields","handleValueChange","useCallback","changeValue","setCurrentFormItem","renderForm","Item","key","label","required","placeholder","onFocus","formElement","useMemo","visible","setVisible","tempCode","setTempCode","style","display","height","padding","flex","flexDirection","overflow","headStyle","flexShrink","title","extra","onClick","text","onCopy","success","exportPatch","defaultActiveKey","String","onChange","tab","className","split","React","createElement","dangerouslySetInnerHTML","__html","width","marginLeft","labelCol","span","onValuesChange","onSelect","value","handleExtendsFormValues","allowClear","i","Option","disabled","onOk","onCancel","TextArea","target","autoSize","minRows","updateSetting","values","axios","post","console","log","Setting","textAlign","margin","backgroundColor","onFinish","htmlType","MyUpload","others","info","status","fileList","response","onRemove","UploadOutlined","savePackage","message","TemplateUpload","uploadConfig","action","List","fields","add","remove","field","accept","MinusCircleOutlined","marginTop","PlusOutlined","list","setList","history","useHistory","query","setQuery","size","filter","indexOf","xs","sm","md","lg","push","resolveCode","Routes","exact","path","App","Header","color","marginRight","mode","theme","to","Content","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c9411d15.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  message,\r\n  Card,\r\n  Tabs,\r\n  Descriptions,\r\n  Select,\r\n} from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport { Package } from './types';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface FileItem {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nfunction outputFormValue(array: string[]) {\r\n  const has: Record<string, string> = {};\r\n  array.forEach((item) => {\r\n    if (has[item] === undefined) {\r\n      has[item] = '';\r\n    }\r\n  });\r\n  return has;\r\n}\r\n\r\nfunction showCode(\r\n  form: Record<string, string>,\r\n  code: string,\r\n  currentFormItem = ''\r\n) {\r\n  if (code && form) {\r\n    let rs = code;\r\n    Object.keys(form).forEach((item) => {\r\n      rs = rs.replace(\r\n        new RegExp(`{{${item}}}`, 'g'),\r\n        `<span class=\"slot-${item} ${\r\n          item === currentFormItem ? 'actived-code' : ''\r\n        }\">${form[item] || ' '}</span>`\r\n      );\r\n    });\r\n    return rs;\r\n  }\r\n  return '';\r\n}\r\n\r\n/** 导出模版 */\r\nfunction exportTemplate(file: FileItem, formValue: Record<string, string>) {\r\n  const blob = new Blob([outputCode(formValue, file.code)], {\r\n    type: 'text/plain;charset=utf-8',\r\n  });\r\n  saveAs(blob, file.name);\r\n}\r\nfunction exportPatch(files: FileItem[], formValues: Record<string, string>[]) {\r\n  files.forEach((item, index) => {\r\n    exportTemplate(item, formValues[index]);\r\n  });\r\n}\r\n\r\nfunction outputCode(form: Record<string, string> = {}, code: string = '') {\r\n  let rs = code;\r\n  Object.keys(form).forEach((item) => {\r\n    rs = rs.replace(new RegExp(`{{${item}}}`, 'g'), form[item]);\r\n  });\r\n  return rs;\r\n}\r\n\r\nconst Creator: React.FC = () => {\r\n  const { name, version } = useParams();\r\n  const [detail, setDetail] = useState<Package>({\r\n    name: '',\r\n    author: '',\r\n    version: '1.0.0',\r\n    description: '',\r\n    files: [],\r\n  });\r\n  useEffect(() => {\r\n    Axios.get(`/api/getPackage?name=${name}&version=${version}`).then((res) => {\r\n      setDetail(res.data.data);\r\n    });\r\n  }, [name, version]);\r\n\r\n  const [code, setCode] = useState('');\r\n\r\n  const [files, setFiles] = useState<FileItem[]>([]);\r\n\r\n  // 加载云端文件\r\n  useEffect(() => {\r\n    if (detail.files.length > 0) {\r\n      Axios.all(detail.files.map((item) => Axios.get(item.template.url))).then(\r\n        Axios.spread(function (...props) {\r\n          // Both requests are now complete\r\n          setFiles(\r\n            props.map((item, index) => ({\r\n              name: detail.files[index].template.name,\r\n              code: item.data,\r\n            }))\r\n          );\r\n          setCodeCtn(props[0].data);\r\n        }),\r\n        () => {\r\n          message.error('模版文件加载失败');\r\n        }\r\n      );\r\n    }\r\n  }, [detail.files]);\r\n\r\n  //#region  tab控制\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleTabChange = (key: string) => {\r\n    setIndex(Number(key));\r\n  };\r\n\r\n  // 设置code\r\n  useEffect(() => {\r\n    if (files && files.length > 0) {\r\n      setCodeCtn(files[Number(index)].code);\r\n    }\r\n  }, [index, files]);\r\n  //#endregion\r\n\r\n  /** 设置代码，高亮，更新表单 */\r\n  const setCodeCtn = (code: string) => {\r\n    setCode(code);\r\n    createForm(code);\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  //#region 表单相关\r\n  const [form] = Form.useForm();\r\n  const [formValues, setFormValues] = useState<Record<string, string>[]>([]);\r\n\r\n  /** 分析代码，生成表单 */\r\n  const createForm = (code: string) => {\r\n    if (code) {\r\n      if (formValues[index]) {\r\n        form.setFieldsValue(formValues[index]);\r\n      } else {\r\n        const res = code.match(/(?<={{)([A-Za-z0-9_]*?)(?=}})/gm);\r\n        const newFormValues = [...formValues];\r\n        if (res) {\r\n          newFormValues[index] = outputFormValue(res);\r\n          form.setFieldsValue(newFormValues[index]);\r\n        } else {\r\n          newFormValues[index] = {};\r\n          form.resetFields();\r\n          message.error('代码中不存在插槽！');\r\n        }\r\n        setFormValues(newFormValues);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleValueChange = useCallback(\r\n    (changeValue: any) => {\r\n      const newFormValues = [...formValues];\r\n      newFormValues[index] = { ...newFormValues[index], ...changeValue };\r\n      setFormValues(newFormValues);\r\n      // 设置表单数据\r\n      form.setFieldsValue(newFormValues[index]);\r\n    },\r\n    [formValues, index]\r\n  );\r\n\r\n  /** 设置插槽高亮 */\r\n  const [currentFormItem, setCurrentFormItem] = useState('');\r\n\r\n  const renderForm = useCallback(\r\n    (formValues: Record<string, string> = {}) =>\r\n      Object.keys(formValues).map((item) => (\r\n        <Form.Item name={item} key={item} label={item} required>\r\n          <Input\r\n            placeholder=\"请输入\"\r\n            onFocus={() => setCurrentFormItem(item)}\r\n          ></Input>\r\n        </Form.Item>\r\n      )),\r\n    [handleValueChange]\r\n  );\r\n  const formElement = useMemo(\r\n    () => (formValues.length > 0 ? renderForm(formValues[index]) : ''),\r\n    [formValues, renderForm, index]\r\n  );\r\n\r\n  /** 继承插槽值 */\r\n  const handleExtendsFormValues = (value: any) => {\r\n    const formValue = formValues[Number(value)];\r\n    const newFormValues = [...formValues];\r\n    newFormValues[index] = { ...formValues[index], ...formValue };\r\n    setFormValues(newFormValues);\r\n    form.setFieldsValue(newFormValues[index]);\r\n  };\r\n  //#endregion\r\n\r\n  //#region  导入代码相关\r\n  const [visible, setVisible] = useState(false);\r\n  const [tempCode, setTempCode] = useState('');\r\n  const showCodeModal = () => {\r\n    setVisible(true);\r\n    setTempCode(code);\r\n  };\r\n  const modalConfirm = () => {\r\n    setCodeCtn(tempCode);\r\n    setVisible(false);\r\n  };\r\n  const modalCancel = () => {\r\n    setTempCode('');\r\n    setVisible(false);\r\n  };\r\n  //#endregion\r\n\r\n  /** 代码高亮 */\r\n  const setHightLight = () => {\r\n    setCurrentFormItem('');\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%', padding: 20 }}>\r\n      <Card\r\n        style={{\r\n          flex: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflow: 'auto',\r\n        }}\r\n        headStyle={{ flexShrink: 0 }}\r\n        title=\"代码预览区域\"\r\n        extra={\r\n          <div>\r\n            {currentFormItem !== '' && (\r\n              <Button onClick={setHightLight}>代码高亮</Button>\r\n            )}\r\n            <Button type=\"primary\" onClick={showCodeModal}>\r\n              导入/编辑代码\r\n            </Button>\r\n            <CopyToClipboard\r\n              text={\r\n                formValues.length > 0 && outputCode(formValues[index], code)\r\n              }\r\n              onCopy={() => message.success('复制成功')}\r\n            >\r\n              <Button type=\"primary\">复制代码</Button>\r\n            </CopyToClipboard>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => exportPatch(files, formValues)}\r\n            >\r\n              导出模版\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <Descriptions title=\"基本信息\">\r\n          <Descriptions.Item label=\"作者\">{detail.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"版本\">{detail.version}</Descriptions.Item>\r\n          <Descriptions.Item label=\"简介\">\r\n            {detail.description}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        {files && files.length > 0 && (\r\n          <Tabs defaultActiveKey={String(index)} onChange={handleTabChange}>\r\n            {files.map((item, index) => (\r\n              <TabPane tab={item.name} key={String(index)}>\r\n                <pre className={` language-${item.name.split('.')[1]}`}>\r\n                  {React.createElement('code', {\r\n                    className: `language-${item.name.split('.')[1]}`,\r\n                    dangerouslySetInnerHTML: {\r\n                      __html:\r\n                        formValues.length > 0 &&\r\n                        showCode(formValues[index], code, currentFormItem),\r\n                    },\r\n                  })}\r\n                </pre>\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        )}\r\n      </Card>\r\n      <Card\r\n        title={`【${files[index]?.name}】配置`}\r\n        style={{ width: '500px', marginLeft: 20 }}\r\n        extra={\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => exportTemplate(files[index], formValues[index])}\r\n          >\r\n            导出当前文件\r\n          </Button>\r\n        }\r\n      >\r\n        <div>\r\n          <Form\r\n            form={form}\r\n            labelCol={{ span: 8 }}\r\n            onValuesChange={(changeValue) => handleValueChange(changeValue)}\r\n          >\r\n            {index > 0 && (\r\n              <Form.Item label=\"插槽值继承\">\r\n                <Select\r\n                  placeholder=\"选择模版插槽继承\"\r\n                  onSelect={(value) => handleExtendsFormValues(value)}\r\n                  allowClear\r\n                >\r\n                  {files.map((item, i) => (\r\n                    <Select.Option key={i} value={i} disabled={i === index}>\r\n                      {item.name}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {formElement}\r\n          </Form>\r\n        </div>\r\n      </Card>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"导入代码【可编辑】\"\r\n        onOk={modalConfirm}\r\n        onCancel={modalCancel}\r\n      >\r\n        <Input.TextArea\r\n          onChange={({ target }) => setTempCode(target.value)}\r\n          value={tempCode}\r\n          allowClear\r\n          autoSize={{ minRows: 10 }}\r\n        ></Input.TextArea>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Creator;\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, message } from 'antd';\r\n\r\nfunction updateSetting(values: any) {\r\n  axios.post('api/updateSetting', values).then((res) => {\r\n    console.log(res);\r\n    message.success('设置成功');\r\n  });\r\n}\r\n\r\nconst Setting: React.FC = () => {\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    axios.get('/api/getSetting').then((res) => {\r\n      form.setFieldsValue(res.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div\r\n        style={{\r\n          width: '680px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#fff',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Form form={form} onFinish={updateSetting}>\r\n          <Form.Item name=\"rule\" label=\"规则(正则)\" required>\r\n            <Input placeholder=\"请输入正确的正则表达式\"></Input>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\nimport { Form, Input, Button, Upload, message } from 'antd';\r\nimport { UploadProps } from 'antd/es/upload';\r\nimport {\r\n  UploadOutlined,\r\n  PlusOutlined,\r\n  MinusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\ninterface MyUploadProps extends UploadProps {\r\n  value?: string;\r\n  onChange?(info: any): void;\r\n}\r\nconst MyUpload: React.FC<MyUploadProps> = (props) => {\r\n  const { value, onChange, ...others } = props;\r\n  const handleChange = (info: any) => {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      onChange &&\r\n        onChange({ name: info.file.name, url: info.file.response.data.url });\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n  const handleRemove = () => {\r\n    onChange && onChange('');\r\n  };\r\n  return (\r\n    <Upload {...others} onChange={handleChange} onRemove={handleRemove}>\r\n      {!value && (\r\n        <Button>\r\n          <UploadOutlined /> 点击上传\r\n        </Button>\r\n      )}\r\n    </Upload>\r\n  );\r\n};\r\n\r\nfunction savePackage(values: any) {\r\n  console.log(values);\r\n  axios.post('/api/savePackage', values).then((res) => {\r\n    if (!res.data.success) {\r\n      message.error(res.data.message);\r\n    } else {\r\n      message.success('操作成功');\r\n    }\r\n  });\r\n}\r\n\r\ninterface TemplateFile {\r\n  file: any;\r\n  description: string;\r\n  readme: any;\r\n}\r\n\r\ninterface Package {\r\n  name: string;\r\n  author: string;\r\n  version: string;\r\n  files: TemplateFile[];\r\n}\r\n\r\nconst TemplateUpload: React.FC = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const uploadConfig = {\r\n    name: 'file',\r\n    action: '/api/upload',\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: '680px',\r\n          margin: '0 auto',\r\n          backgroundColor: '#fff',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Form form={form} labelCol={{ span: 4 }} onFinish={savePackage}>\r\n          {/* <Form.Item name=\"type\" label=\"类型\" required>\r\n            <Radio.Group>\r\n              <Radio value={1}>单文件</Radio>\r\n              <Radio value={2}>多文件</Radio>\r\n            </Radio.Group>\r\n          </Form.Item> */}\r\n          <Form.Item name='name' label='模版名' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.Item name='description' label='概要' required>\r\n            <Input.TextArea autoSize={{ minRows: 2 }}></Input.TextArea>\r\n          </Form.Item>\r\n          <Form.Item name='version' label='版本号' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.Item name='author' label='作者' required>\r\n            <Input></Input>\r\n          </Form.Item>\r\n          <Form.List name='files'>\r\n            {(fields, { add, remove }) => {\r\n              return (\r\n                <div>\r\n                  {fields.map((field, index) => (\r\n                    <div key={field.key} className='template-ctn'>\r\n                      <p className='template-title'>模版文件{index + 1}</p>\r\n                      <Form.Item\r\n                        name={[field.name, 'template']}\r\n                        // fieldKey={[field.fieldKey, 'template']}\r\n                        label='模版文件'\r\n                      >\r\n                        <MyUpload\r\n                          {...uploadConfig}\r\n                          // onChange={FileUploadProvider(index, 'template')}\r\n                        ></MyUpload>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name={[field.name, 'description']}\r\n                        // fieldKey={[field.fieldKey, 'description']}\r\n                        label='简介'\r\n                      >\r\n                        <Input.TextArea\r\n                          autoSize={{ minRows: 2 }}\r\n                        ></Input.TextArea>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name={[field.name, 'readme']}\r\n                        // fieldKey={[field.fieldKey, 'readme']}\r\n                        label='说明文档(md)'\r\n                      >\r\n                        <MyUpload\r\n                          {...uploadConfig}\r\n                          accept='.md'\r\n                          // onChange={FileUploadProvider(index, 'template')}\r\n                        ></MyUpload>\r\n                      </Form.Item>\r\n                      {fields.length > 1 ? (\r\n                        <MinusCircleOutlined\r\n                          className='dynamic-delete-button'\r\n                          style={{ margin: '0 8px' }}\r\n                          onClick={() => {\r\n                            remove(field.name);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <Form.Item label='模版'>\r\n                    <Button\r\n                      type='dashed'\r\n                      onClick={() => {\r\n                        add();\r\n                      }}\r\n                      style={{ width: '60%', marginTop: 10 }}\r\n                    >\r\n                      <PlusOutlined /> 添加模版\r\n                    </Button>\r\n                  </Form.Item>\r\n                </div>\r\n              );\r\n            }}\r\n          </Form.List>\r\n          <Form.Item style={{ textAlign: 'center' }}>\r\n            <Button type='primary' htmlType='submit'>\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateUpload;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Empty, Input } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Package } from './types';\r\n\r\nconst List: React.FC = () => {\r\n  const [list, setList] = useState<Package[]>([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    axios.get('/api/list').then((res) => {\r\n      setList(res.data);\r\n    });\r\n  }, []);\r\n  // 筛选\r\n  const [query, setQuery] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Input\r\n          size='large'\r\n          style={{ width: '300px', marginLeft: 10 }}\r\n          value={query}\r\n          onChange={({ target }) => setQuery(target.value)}\r\n          placeholder='请输入模版名搜索'\r\n        ></Input>\r\n      </div>\r\n      <Row>\r\n        {list && list.length > 0 ? (\r\n          list\r\n            .filter((item) => item.name.indexOf(query) !== -1)\r\n            .map((item) => (\r\n              <Col\r\n                key={item.name}\r\n                xs={24}\r\n                sm={24}\r\n                md={12}\r\n                lg={6}\r\n                style={{ padding: 10 }}\r\n              >\r\n                <Card\r\n                  title={item.name}\r\n                  extra={item.version}\r\n                  onClick={() => history.push(`/creator/${item.name}/${item.version}`)}\r\n                >\r\n                  <pre>{item.description || '暂无简介'}</pre>\r\n                  <p style={{ textAlign: 'right' }}>作者：{item.author}</p>\r\n                </Card>\r\n              </Col>\r\n            ))\r\n        ) : (\r\n          <Empty></Empty>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Modal, Button, message, Card } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// import Prism from 'prismjs';\r\n// import useRequest from '../hooks/useRequest';\r\n\r\nfunction outputFormValue(array: string[]) {\r\n  const has: Record<string, string | undefined> = {};\r\n  array.forEach((item) => {\r\n    if (has[item] === undefined) {\r\n      has[item] = '';\r\n    }\r\n  });\r\n  return has;\r\n}\r\n\r\nfunction showCode(\r\n  form: Record<string, string>,\r\n  code: string,\r\n  currentFormItem = ''\r\n) {\r\n  if (code) {\r\n    let rs = code;\r\n    Object.keys(form).forEach((item) => {\r\n      rs = rs.replace(\r\n        new RegExp(`{{${item}}}`, 'g'),\r\n        `<span class=\"slot-${item} ${\r\n          item === currentFormItem ? 'actived-code' : ''\r\n        }\">${form[item] || ' '}</span>`\r\n      );\r\n    });\r\n    return rs;\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction outputCode(form: Record<string, string>, code: string) {\r\n  if (code) {\r\n    let rs = code;\r\n    Object.keys(form).forEach((item) => {\r\n      rs = rs.replace(new RegExp(`{{${item}}}`, 'g'), form[item]);\r\n    });\r\n    return rs;\r\n  }\r\n  return '';\r\n}\r\n\r\nasync function loadCode(path: string) {\r\n  return await fetch(path)\r\n    .then((res) => {\r\n      return res.text();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nconst Creator: React.FC = () => {\r\n  const [code, setCode] = useState('');\r\n\r\n  /** 分析代码，生成表单 */\r\n  const resolveCode = (code: string) => {\r\n    if (code) {\r\n      const res = code.match(/(?<={{)([A-Za-z0-9_]*?)(?=}})/gm);\r\n      if (res) {\r\n        setFormValues(outputFormValue(res));\r\n      } else {\r\n        setFormValues({});\r\n        message.error('代码中不存在插槽！');\r\n      }\r\n    }\r\n  };\r\n\r\n  /** 设置代码，高亮，更新表单 */\r\n  const setCodeCtn = (code: string) => {\r\n    setCode(code);\r\n    resolveCode(code);\r\n    Prism.highlightAll();\r\n  };\r\n\r\n  //#region 表单相关\r\n  const [formValues, setFormValues] = useState({});\r\n\r\n  const handleValueChange = useCallback(\r\n    (changeValue: any) => {\r\n      setFormValues({ ...formValues, ...changeValue });\r\n    },\r\n    [formValues]\r\n  );\r\n\r\n  /** 设置插槽高亮 */\r\n  const [currentFormItem, setCurrentFormItem] = useState('');\r\n\r\n  const renderForm = useCallback(\r\n    (formValues: Record<string, string>) => (\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        onValuesChange={(changeValue) => handleValueChange(changeValue)}\r\n      >\r\n        {Object.keys(formValues).map((item) => (\r\n          <Form.Item name={item} key={item} label={item} required>\r\n            <Input\r\n              placeholder=\"请输入\"\r\n              onFocus={() => setCurrentFormItem(item)}\r\n            ></Input>\r\n          </Form.Item>\r\n        ))}\r\n      </Form>\r\n    ),\r\n    [handleValueChange]\r\n  );\r\n  const form = useMemo(() => renderForm(formValues), [formValues, renderForm]);\r\n  //#endregion\r\n\r\n  //#region  导入代码相关\r\n  const [visible, setVisible] = useState(false);\r\n  const [tempCode, setTempCode] = useState('');\r\n  const showCodeModal = () => {\r\n    setVisible(true);\r\n    setTempCode(code);\r\n  };\r\n  const modalConfirm = () => {\r\n    setCodeCtn(tempCode);\r\n    setVisible(false);\r\n  };\r\n  const modalCancel = () => {\r\n    setTempCode('');\r\n    setVisible(false);\r\n  };\r\n  //#endregion\r\n\r\n  const setHightLight = () => {\r\n    setCurrentFormItem('');\r\n    setTimeout(Prism.highlightAll, 0);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%', padding: 20 }}>\r\n      <Card\r\n        style={{ flex: 1 }}\r\n        title=\"代码预览区域\"\r\n        extra={\r\n          <div>\r\n            {currentFormItem !== '' && (\r\n              <Button onClick={setHightLight}>代码高亮</Button>\r\n            )}\r\n            <Button type=\"primary\" onClick={showCodeModal}>\r\n              导入/编辑代码\r\n            </Button>\r\n            <CopyToClipboard\r\n              text={outputCode(formValues, code)}\r\n              onCopy={() => message.success('复制成功')}\r\n            >\r\n              <Button type=\"primary\">复制代码</Button>\r\n            </CopyToClipboard>\r\n          </div>\r\n        }\r\n      >\r\n        <pre className=\" language-tsx\">\r\n          {React.createElement('code', {\r\n            className: 'language-tsx',\r\n            dangerouslySetInnerHTML: {\r\n              __html: code ? showCode(formValues, code, currentFormItem) : '请导入代码',\r\n            },\r\n          })}\r\n        </pre>\r\n      </Card>\r\n      <Card title=\"模版代码配置\" style={{ width: '500px', marginLeft: 20 }}>\r\n        <div>{form}</div>\r\n      </Card>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"导入代码【可编辑】\"\r\n        onOk={modalConfirm}\r\n        onCancel={modalCancel}\r\n      >\r\n        <Input.TextArea\r\n          onChange={({ target }) => setTempCode(target.value)}\r\n          value={tempCode}\r\n          allowClear\r\n          autoSize={{ minRows: 10 }}\r\n        ></Input.TextArea>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Creator;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Creator from './pages/creator';\r\nimport Setting from './pages/settings';\r\nimport Upload from './pages/upload';\r\nimport List from './pages/list';\r\nimport LocalCode from './pages/localCode';\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n      <Route exact path=\"/creator/:name/:version\">\r\n        <Creator></Creator>\r\n      </Route>\r\n      <Route exact path=\"/ezcode\">\r\n        <LocalCode></LocalCode>\r\n      </Route>\r\n      <Route exact path=\"/settings\">\r\n        <Setting></Setting>\r\n      </Route>\r\n      <Route exact path=\"/upload\">\r\n        <Upload></Upload>\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n        <List></List>\r\n      </Route>\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout style={{ height: '100vh' }}>\r\n        <Layout.Header className=\"header\">\r\n          <h1 style={{ color: '#fff', marginRight: 60 }}>代码生成器</h1>\r\n\r\n          <Menu mode=\"horizontal\" theme=\"dark\">\r\n            <Menu.Item>\r\n              <Link to=\"/\">模版列表</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/ezcode\">本地操作台</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/settings\">设置</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/upload\">上传模版</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Layout.Header>\r\n        <Layout.Content style={{ padding: 20, textAlign: 'left' }}>\r\n          <Routes></Routes>\r\n        </Layout.Content>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}